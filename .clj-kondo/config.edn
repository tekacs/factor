{:linters
 {:unused-namespace
  {:exclude [factor.types
             factor.client.types
             crafter
             react]}

  :unresolved-namespace
  {:exclude [shadow.cljs.devtools.server.runtime
             shadow.cljs.devtools.server.worker
             shadow.cljs.devtools.server.supervisor
             shadow.cljs.devtools.api
             web.shadow]}

  :unresolved-symbol
  {:exclude [(meander.epsilon/find)
             (meander.epsilon/search)
             (meander.epsilon/match)
             (meander.epsilon/rewrite)
             (meander.strategy.epsilon/find)
             (meander.strategy.epsilon/match)
             (meander.strategy.epsilon/rewrite)]}

  :unsorted-required-namespaces
  {:level :warning}

  :type-mismatch
  {:level :warning}}

 :hooks
 {:analyze-call {factor.client.react/prop hooks.react/prop}}

 :lint-as
 {factor.examples/defexample             clojure.core/def
  
  factor.types/def                       clojure.spec.alpha/def
  factor.types/defn                      clojure.core/defn
  factor.types/defn-                     clojure.core/defn-
  
  factor.client.defcards/defcard         clj-kondo.lint-as/def-catch-all
  
  factor.client.react/defnc              clojure.core/defn
  
  foundation.hooks/defcontext            clojure.core/def
  
  foundation.icons/deficon               clojure.core/def
  
  helix.core/defnc                       clojure.core/defn

  promesa.core/let                       clojure.core/let
  
  com.wsscode.pathom.connect/defresolver clojure.core/defn
  com.wsscode.pathom.connect/defmutation clojure.core/defn}}
